From badcf5316e7717530139089e7cbcc6e757e37cd2 Mon Sep 17 00:00:00 2001
From: Zhikui Ren <zhikui.ren@intel.com>
Date: Tue, 8 Dec 2020 15:16:25 -0800
Subject: [PATCH] update meson build for MCTP interfaces

Upstream-Status: Inappropriate [oe-specific]

Signed-off-by: Zhikui Ren <zhikui.ren@intel.com>
Signed-off-by: Joseph Liu <kwliu@nuvoton.com>
---
 gen/xyz/openbmc_project/MCTP/Base/meson.build | 35 ++++++++++++
 .../MCTP/Binding/PCIe/meson.build             | 35 ++++++++++++
 .../MCTP/Binding/SMBus/meson.build            | 31 +++++++++++
 .../openbmc_project/MCTP/Binding/meson.build  | 38 +++++++++++++
 .../openbmc_project/MCTP/BusOwner/meson.build | 34 ++++++++++++
 .../MCTP/SupportedMessageTypes/meson.build    | 34 ++++++++++++
 gen/xyz/openbmc_project/MCTP/meson.build      | 54 +++++++++++++++++++
 7 files changed, 261 insertions(+)
 create mode 100644 gen/xyz/openbmc_project/MCTP/Base/meson.build
 create mode 100644 gen/xyz/openbmc_project/MCTP/Binding/PCIe/meson.build
 create mode 100644 gen/xyz/openbmc_project/MCTP/Binding/SMBus/meson.build
 create mode 100644 gen/xyz/openbmc_project/MCTP/Binding/meson.build
 create mode 100644 gen/xyz/openbmc_project/MCTP/BusOwner/meson.build
 create mode 100644 gen/xyz/openbmc_project/MCTP/SupportedMessageTypes/meson.build

diff --git a/gen/xyz/openbmc_project/MCTP/Base/meson.build b/gen/xyz/openbmc_project/MCTP/Base/meson.build
new file mode 100644
index 000000000..6c39989b0
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/Base/meson.build
@@ -0,0 +1,35 @@
+# Generated file; do not modify.
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/Base'
+
+
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/Base__cpp'.underscorify(),
+    input: [
+        '../../../../../yaml/xyz/openbmc_project/MCTP/Base.interface.yaml',
+    ],
+    output: [
+        'common.hpp',
+        'server.cpp',
+        'server.hpp',
+        'client.hpp',
+        'aserver.hpp',
+    ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Base',
+    ],
+    install: should_generate_cpp,
+    install_dir: [
+        get_option('includedir') / sdbusplus_current_path,
+        false,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+    ],
+    build_by_default: should_generate_cpp,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/Binding/PCIe/meson.build b/gen/xyz/openbmc_project/MCTP/Binding/PCIe/meson.build
new file mode 100644
index 000000000..5917f7538
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/Binding/PCIe/meson.build
@@ -0,0 +1,35 @@
+# Generated file; do not modify.
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/Binding/PCIe'
+
+
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/PCIe__cpp'.underscorify(),
+    input: [
+        '../../../../../../yaml/xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml',
+    ],
+    output: [
+        'common.hpp',
+        'server.cpp',
+        'server.hpp',
+        'client.hpp',
+        'aserver.hpp',
+    ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/PCIe',
+    ],
+    install: should_generate_cpp,
+    install_dir: [
+        get_option('includedir') / sdbusplus_current_path,
+        false,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+    ],
+    build_by_default: should_generate_cpp,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/Binding/SMBus/meson.build b/gen/xyz/openbmc_project/MCTP/Binding/SMBus/meson.build
new file mode 100644
index 000000000..42a76a0c8
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/Binding/SMBus/meson.build
@@ -0,0 +1,31 @@
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/Binding/SMBus'
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/SMBus__cpp'.underscorify(),
+    input: [
+        '../../../../../../yaml/xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml',
+    ],
+    output: [
+        'common.hpp',
+        'server.cpp',
+        'server.hpp',
+        'client.hpp',
+        'aserver.hpp',
+    ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/SMBus',
+    ],
+    install: should_generate_cpp,
+    install_dir: [
+        get_option('includedir') / sdbusplus_current_path,
+        false,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+    ],
+    build_by_default: should_generate_cpp,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/Binding/meson.build b/gen/xyz/openbmc_project/MCTP/Binding/meson.build
new file mode 100644
index 000000000..68508b110
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/Binding/meson.build
@@ -0,0 +1,38 @@
+# Generated file; do not modify.
+subdir('PCIe')
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/Binding'
+
+generated_markdown += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/PCIe__markdown'.underscorify(),
+    input: [ '../../../../../yaml/xyz/openbmc_project/MCTP/Binding/PCIe.interface.yaml',  ],
+    output: [ 'PCIe.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/PCIe',
+    ],
+    install: should_generate_markdown,
+    install_dir: [inst_markdown_dir / sdbusplus_current_path],
+    build_by_default: should_generate_markdown,
+)
+
+subdir('SMBus')
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/Binding'
+generated_markdown += custom_target(
+    'xyz/openbmc_project/MCTP/Binding/SMBus__markdown'.underscorify(),
+    input: [ '../../../../../yaml/xyz/openbmc_project/MCTP/Binding/SMBus.interface.yaml',  ],
+    output: [ 'SMBus.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/Binding/SMBus',
+    ],
+    install: should_generate_markdown,
+    install_dir: [inst_markdown_dir / sdbusplus_current_path],
+    build_by_default: should_generate_markdown,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/BusOwner/meson.build b/gen/xyz/openbmc_project/MCTP/BusOwner/meson.build
new file mode 100644
index 000000000..45c09395e
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/BusOwner/meson.build
@@ -0,0 +1,34 @@
+# Generated file; do not modify.
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/BusOwner'
+
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/BusOwner__cpp'.underscorify(),
+    input: [
+        '../../../../../yaml/xyz/openbmc_project/MCTP/BusOwner.interface.yaml',
+    ],
+    output: [
+        'common.hpp',
+        'server.cpp',
+        'server.hpp',
+        'client.hpp',
+        'aserver.hpp',
+    ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/BusOwner',
+    ],
+    install: should_generate_cpp,
+    install_dir: [
+        get_option('includedir') / sdbusplus_current_path,
+        false,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+    ],
+    build_by_default: should_generate_cpp,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/SupportedMessageTypes/meson.build b/gen/xyz/openbmc_project/MCTP/SupportedMessageTypes/meson.build
new file mode 100644
index 000000000..7af690336
--- /dev/null
+++ b/gen/xyz/openbmc_project/MCTP/SupportedMessageTypes/meson.build
@@ -0,0 +1,34 @@
+# Generated file; do not modify.
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP/SupportedMessageTypes'
+
+generated_sources += custom_target(
+    'xyz/openbmc_project/MCTP/SupportedMessageTypes__cpp'.underscorify(),
+    input: [
+        '../../../../../yaml/xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml',
+    ],
+    output: [
+        'common.hpp',
+        'server.cpp',
+        'server.hpp',
+        'client.hpp',
+        'aserver.hpp',
+    ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/MCTP/SupportedMessageTypes',
+    ],
+    install: should_generate_cpp,
+    install_dir: [
+        get_option('includedir') / sdbusplus_current_path,
+        false,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+        get_option('includedir') / sdbusplus_current_path,
+    ],
+    build_by_default: should_generate_cpp,
+)
diff --git a/gen/xyz/openbmc_project/MCTP/meson.build b/gen/xyz/openbmc_project/MCTP/meson.build
index 7f8359794..c0cbee8d4 100644
--- a/gen/xyz/openbmc_project/MCTP/meson.build
+++ b/gen/xyz/openbmc_project/MCTP/meson.build
@@ -1,4 +1,42 @@
 # Generated file; do not modify.
+subdir('Base')
+
+sdbusplus_current_path = 'xyz/openbmc_project/MCTP'
+
+generated_markdown += custom_target(
+    'xyz/openbmc_project/MCTP/Base__markdown'.underscorify(),
+    input: [ '../../../../yaml/xyz/openbmc_project/MCTP/Base.interface.yaml',  ],
+    output: [ 'Base.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'xyz/openbmc_project/MCTP/Base',
+    ],
+    install: should_generate_markdown,
+    install_dir: [inst_markdown_dir / sdbusplus_current_path],
+    build_by_default: should_generate_markdown,
+)
+
+subdir('Binding')
+subdir('BusOwner')
+generated_markdown += custom_target(
+    'xyz/openbmc_project/MCTP/BusOwner__markdown'.underscorify(),
+    input: [ '../../../../yaml/xyz/openbmc_project/MCTP/BusOwner.interface.yaml',  ],
+    output: [ 'BusOwner.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'xyz/openbmc_project/MCTP/BusOwner',
+    ],
+    install: should_generate_markdown,
+    install_dir: [inst_markdown_dir / sdbusplus_current_path],
+    build_by_default: should_generate_markdown,
+)
+
 subdir('Endpoint')
 
 sdbusplus_current_path = 'xyz/openbmc_project/MCTP'
@@ -20,3 +58,19 @@ generated_markdown += custom_target(
     build_by_default: should_generate_markdown,
 )
 
+subdir('SupportedMessageTypes')
+generated_markdown += custom_target(
+    'xyz/openbmc_project/MCTP/SupportedMessageTypes__markdown'.underscorify(),
+    input: [ '../../../../yaml/xyz/openbmc_project/MCTP/SupportedMessageTypes.interface.yaml',  ],
+    output: [ 'SupportedMessageTypes.md' ],
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'xyz/openbmc_project/MCTP/SupportedMessageTypes',
+    ],
+    install: should_generate_markdown,
+    install_dir: [inst_markdown_dir / sdbusplus_current_path],
+    build_by_default: should_generate_markdown,
+)
-- 
2.43.0

